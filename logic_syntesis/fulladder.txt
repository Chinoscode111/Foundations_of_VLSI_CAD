/* Generated by Yosys 0.33 (git sha1 2584903a060) */

/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top = 1 *)
(* src = "full_adder.v:1" *)
module full_adder(A, B, Cin, Sum, Cout);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;

  (* src = "full_adder.v:2" *)
  input A;
  wire A;
  
  (* src = "full_adder.v:3" *)
  input B;
  wire B;
  
  (* src = "full_adder.v:4" *)
  input Cin;
  wire Cin;
  
  (* src = "full_adder.v:5" *)
  output Sum;
  wire Sum;
  
  (* src = "full_adder.v:6" *)
  output Cout;
  wire Cout;

  AND _07_ (
    .A(A),
    .B(B),
    .Y(_00_)
  );

  AND _08_ (
    .A(B),
    .B(Cin),
    .Y(_01_)
  );

  AND _09_ (
    .A(A),
    .B(Cin),
    .Y(_02_)
  );

  OR _10_ (
    .A(_00_),
    .B(_01_),
    .Y(_03_)
  );

  OR _11_ (
    .A(_03_),
    .B(_02_),
    .Y(_04_)
  );

  XOR _12_ (
    .A(A),
    .B(B),
    .Y(_05_)
  );

  XOR _13_ (
    .A(_05_),
    .B(Cin),
    .Y(_06_)
  );

  assign Sum = _06_;
  assign Cout = _04_;
endmodule

